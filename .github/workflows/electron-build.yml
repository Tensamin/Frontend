name: Electron Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    
    steps:
      - name: Update on methanium
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWD }}
          port: ${{ secrets.SSH_PORT }}
          script: cd /home/${{ secrets.SSH_USER }}/Tensamin/Release && ./update.sh

  build-linux:
    name: Build for Linux
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "24"

      - name: Install pnpm
        run: npm i -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Build Electron app for Linux
        run: pnpm run make

      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tensamin-linux
          path: out/make/**/tensamin*

  build-windows:
    name: Build for Windows
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "24"

      - name: Install pnpm
        run: npm i -g pnpm; pnpm config set node-linker hoisted

      - name: Install dependencies
        run: pnpm install

      - name: Build Electron app for Windows
        run: pnpm run make:windows

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tensamin-windows
          path: out/make/**/tensamin*

  build-macos:
    name: Build for MacOS
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "24"

      - name: Install pnpm
        run: npm i -g pnpm

      - name: Install dependencies
        run: pnpm install && pnpm install macos-alias ds-store appdmg electron-installer-dmg

      - name: Rebuild
        run: npm rebuild

      - name: Build Electron app for MacOS
        run: pnpm run make

      - name: Upload MacOS artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tensamin-macos
          path: out/make/**/tensamin*

  release:
    name: "Create Release"
    needs: [build-linux, build-windows, build-macos]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Get version from repository
        uses: actions/checkout@v4

      - name: Set version from repository in environment
        id: get_version
        run: |
          PACKAGE_VERSION=$(jq -r '.version' package.json)
          echo "PACKAGE_VERSION=$PACKAGE_VERSION" >> "$GITHUB_ENV"

      - name: Download Linux artifact
        uses: actions/download-artifact@v5
        with:
          name: tensamin-linux
          path: ./artifacts

      - name: Download Windows artifact
        uses: actions/download-artifact@v5
        with:
          name: tensamin-windows
          path: ./artifacts

      - name: Download MacOS artifact
        uses: actions/download-artifact@v5
        with:
          name: tensamin-macos
          path: ./artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2.3.2
        with:
          name: ${{ env.PACKAGE_VERSION }}-${{ github.sha_short }} | Desktop Apps
          body: Automated release of desktop apps for version ${{ env.PACKAGE_VERSION }}-${{ github.sha_short }}
          tag_name: v${{ env.PACKAGE_VERSION }}-${{ github.sha_short }}-desktop-apps
          draft: false
          prerelease: false
          files: ./artifacts/**/tensamin*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  aur-package:
    name: Create AUR Package
    needs: release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "24"

      - name: Install pnpm
        run: npm i -g pnpm

      - name: Create Arch Linux Package
        run: pnpm run make:archlinux

      - name: Publish Arch Linux Package
        uses: ulises-jeremias/github-actions-aur-publish@v1
        with:
          pkgname: tensamin-bin
          pkgbuild: ./tensamin-aur/PKGBUILD
          commit_username: ${{ secrets.AUR_USERNAME }}
          commit_email: ${{ secrets.AUR_EMAIL }}
          ssh_private_key: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
          commit_message: Automated Update
          ssh_keyscan_types: ed25519
          update_pkgver: false
