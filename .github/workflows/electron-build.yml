name: Electron Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-linux:
    name: Build for Linux
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "24"

      - name: Install dependencies
        run: npm install

      - name: Build Electron app for Linux
        run: npm run make

      - name: Create Arch Linux Package
        run: npm run make:archlinux

      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tensamin-linux
          path: out/

  build-windows:
    name: Build for Windows
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "24"

      - name: Install dependencies
        run: npm install

      - name: Build Electron app for Windows
        run: npm run make:windows

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tensamin-windows
          path: out/

  build-macos:
    name: Build for macOS
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "24"

      - name: Install dependencies
        run: npm install

      - name: Build Electron app for macOS
        run: npm run make

      - name: Upload macOS artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tensamin-macos
          path: out/

  release:
    name: "Create Release"
    needs: [build-linux, build-windows, build-macos]
    runs-on: self-hosted
    permissions:
      contents: write
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: Apps ${{ github.ref_name }}
          body: |
            Automated Release for ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: ./artifacts/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
