name: "Build and Release Desktop App"

on:
  workflow_dispatch:
  push:
    branches:
      - release

jobs:
  macos-arm:
    runs-on: macos-latest
    permissions:
      contents: write
    env:
      TAURI_ARGS: "--target aarch64-apple-darwin"
      RUST_TARGETS: "aarch64-apple-darwin,x86_64-apple-darwin"
    steps: &publish-tauri-steps
      - uses: actions/checkout@v4

      - name: install dependencies (ubuntu only)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ env.RUST_TARGETS }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: "./tauri -> target"

      - name: install frontend dependencies
        run: bun install

      - name: build and release
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: v__VERSION__
          releaseName: "Desktop App v__VERSION__"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: false
          prerelease: false
          args: ${{ env.TAURI_ARGS }}

  macos-intel:
    runs-on: macos-latest
    permissions:
      contents: write
    env:
      TAURI_ARGS: "--target x86_64-apple-darwin"
      RUST_TARGETS: "aarch64-apple-darwin,x86_64-apple-darwin"
    steps: *publish-tauri-steps

  linux-arm:
    runs-on: ubuntu-24.04-arm
    permissions:
      contents: write
    env:
      TAURI_ARGS: ""
      RUST_TARGETS: ""
    steps: *publish-tauri-steps

  linux:
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    env:
      TAURI_ARGS: ""
      RUST_TARGETS: ""
    steps: *publish-tauri-steps

  windows:
    runs-on: windows-latest
    permissions:
      contents: write
    env:
      TAURI_ARGS: ""
      RUST_TARGETS: ""
    steps: *publish-tauri-steps

  publish-aur-bin:
    needs: [macos-arm, macos-intel, linux, linux-arm, windows]
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: publish on aur
        uses: ulises-jeremias/github-actions-aur-publish@v1
        with:
          pkgname: tensamin-bin
          pkgbuild: ./tauri/PKGBUILD-bin
          assets: |
            ./tauri/tensamin.install
          commit_username: ${{ secrets.AUR_USERNAME }}
          commit_email: ${{ secrets.AUR_EMAIL }}
          ssh_private_key: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
          commit_message: Automated Update
          ssh_keyscan_types: ed25519
          update_pkgver: false

  publish-aur-git:
    needs: [macos-arm, macos-intel, linux, linux-arm, windows]
    runs-on: ubuntu-24.04
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: publish on aur
        uses: ulises-jeremias/github-actions-aur-publish@v1
        with:
          pkgname: tensamin-git
          pkgbuild: ./tauri/PKGBUILD-git
          commit_username: ${{ secrets.AUR_USERNAME }}
          commit_email: ${{ secrets.AUR_EMAIL }}
          ssh_private_key: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
          commit_message: Automated Update
          ssh_keyscan_types: ed25519
          update_pkgver: true
